{"version":3,"sources":["assets/lightbulb.svg","assets/lightbulb-inactive.svg","assets/button.svg","assets/button-inactive.svg","index.js"],"names":["module","exports","Lightbulb","class","src","this","props","value","lightbulb_icon","lightbulb_inactive_icon","React","Component","Button","className","button_icon","button_inactive_icon","onClick","Game","state","buttons","Array","fill","i","slice","setState","handleClick","lightbulbsState","getLightbulbsState","ans","isVictory","renderButton","buttonMasks","length","j","ReactDOM","render","document","getElementById"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,8MCQrCC,G,uLAEA,OACE,yBACEC,MAAM,YACNC,IACEC,KAAKC,MAAMC,MACPC,IACAC,U,GARQC,IAAMC,YAetBC,E,iLAEF,OACE,yBACEC,UAAU,SACVT,IACEC,KAAKC,MAAMC,MACPO,IACAC,IAENC,QAASX,KAAKC,MAAMU,c,GAVPN,IAAMC,WAgBrBM,E,YACJ,WAAYX,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACTC,QAASC,MAAM,GAAGC,MAAK,IAHZ,E,yEAMPC,GACR,IAAMH,EAAUd,KAAKa,MAAMC,QAAQI,QACnCJ,EAAQG,IAAMH,EAAQG,GACtBjB,KAAKmB,SAAS,CAACL,QAASA,M,mCAEfG,GAAI,IAAD,OACZ,OACE,kBAACV,EAAD,CACEL,MAAOF,KAAKa,MAAMC,QAAQG,GAC1BN,QAAS,kBAAM,EAAKS,YAAYH,Q,+BAGtC,IAAII,EAAkBC,EAAmBtB,KAAKa,MAAMC,SACpD,OACE,6BACI,yBAAKhB,MAAM,UAsDrB,SAAmBgB,GAGjB,IAFA,IAAIO,EAAkBC,EAAmBR,GACrCS,GAAM,EACDN,EAAI,EAAGA,EAAI,IAAKA,EACrBM,EAAMA,GAAOF,EAAgBJ,GAEjC,OAAOM,EA3DMC,CAAUxB,KAAKa,MAAMC,SACnB,uBAAGhB,MAAM,WAAT,YACA,uDAGP,yBAAKA,MAAM,SACP,yBAAKA,MAAM,cACP,kBAACD,EAAD,CAAWK,MAAOmB,EAAgB,KAClC,kBAACxB,EAAD,CAAWK,MAAOmB,EAAgB,KAClC,kBAACxB,EAAD,CAAWK,MAAOmB,EAAgB,KAClC,kBAACxB,EAAD,CAAWK,MAAOmB,EAAgB,KAClC,kBAACxB,EAAD,CAAWK,MAAOmB,EAAgB,KAClC,kBAACxB,EAAD,CAAWK,MAAOmB,EAAgB,KAClC,kBAACxB,EAAD,CAAWK,MAAOmB,EAAgB,OAG1C,yBAAKvB,MAAM,SACP,yBAAKA,MAAM,WACNE,KAAKyB,aAAa,GAClBzB,KAAKyB,aAAa,GAClBzB,KAAKyB,aAAa,GAClBzB,KAAKyB,aAAa,GAClBzB,KAAKyB,aAAa,GAClBzB,KAAKyB,aAAa,GAClBzB,KAAKyB,aAAa,U,GA/ClBpB,IAAMC,WAuDzB,SAASgB,EAAmBR,GAW1B,IAVA,IAAMY,EAAc,CAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEnBL,EAAkBN,MAAM,GAAGC,MAAK,GAC3BC,EAAI,EAAGA,EAAIH,EAAQa,SAAUV,EAClC,GAAIH,EAAQG,GACR,IAAK,IAAIW,EAAI,EAAGA,EAAI,IAAKA,EACrBP,EAAgBO,IAAMF,EAAYT,GAAGW,GAIjD,OAAOP,EAcTQ,IAASC,OACP,kBAAClB,EAAD,MACAmB,SAASC,eAAe,U","file":"static/js/main.41d40653.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lightbulb.4620fecc.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightbulb-inactive.daf85581.svg\";","module.exports = __webpack_public_path__ + \"static/media/button.f9c31452.svg\";","module.exports = __webpack_public_path__ + \"static/media/button-inactive.a2be0ba2.svg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport lightbulb_icon from './assets/lightbulb.svg';\nimport lightbulb_inactive_icon from './assets/lightbulb-inactive.svg';\nimport button_icon from './assets/button.svg';\nimport button_inactive_icon from './assets/button-inactive.svg';\nimport './index.css';\n\nclass Lightbulb extends React.Component {\n    render() {\n      return (\n        <img\n          class=\"lightbulb\" \n          src={\n            this.props.value\n              ? lightbulb_icon\n              : lightbulb_inactive_icon\n          }\n        />\n      );\n    }\n  }\n  \n  class Button extends React.Component {\n    render() {\n      return (\n        <img\n          className=\"button\"\n          src={\n            this.props.value\n              ? button_icon\n              : button_inactive_icon\n          }\n          onClick={this.props.onClick}\n        />\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buttons: Array(7).fill(false),\n        }\n    }\n    handleClick(i) {\n        const buttons = this.state.buttons.slice();\n        buttons[i] = !buttons[i];\n        this.setState({buttons: buttons});\n    }\n    renderButton(i) {\n        return(\n          <Button \n            value={this.state.buttons[i]}\n            onClick={() => this.handleClick(i)}/>);\n    }\n    render() {\n      let lightbulbsState = getLightbulbsState(this.state.buttons);\n      return (\n        <div>\n            <div class=\"status\">\n                {isVictory(this.state.buttons)\n                 ? <p class=\"victory\">Victory!</p>\n                 : <p>Turn on all the lights!</p>\n                }\n            </div>\n            <div class=\"panel\">\n                <div class=\"lightbulbs\">\n                    <Lightbulb value={lightbulbsState[0]}/>\n                    <Lightbulb value={lightbulbsState[1]}/>\n                    <Lightbulb value={lightbulbsState[2]}/>\n                    <Lightbulb value={lightbulbsState[3]}/>\n                    <Lightbulb value={lightbulbsState[4]}/>\n                    <Lightbulb value={lightbulbsState[5]}/>\n                    <Lightbulb value={lightbulbsState[6]}/>\n                </div>\n            </div>\n            <div class=\"panel\">\n                <div class=\"buttons\">\n                    {this.renderButton(0)}\n                    {this.renderButton(1)}\n                    {this.renderButton(2)}\n                    {this.renderButton(3)}\n                    {this.renderButton(4)}\n                    {this.renderButton(5)}\n                    {this.renderButton(6)}\n                </div>\n            </div>\n        </div>\n      );\n    }\n  }\n\n  function getLightbulbsState(buttons) {\n    const buttonMasks = [\n        [1, 0, 1, 1, 0, 1, 0],\n        [1, 1, 0, 0, 0, 1, 1],\n        [0, 1, 1, 1, 0, 0, 1],\n        [1, 0, 1, 0, 1, 0, 1],\n        [0, 1, 1, 1, 0, 1, 0],\n        [0, 0, 1, 1, 0, 0, 1],\n        [1, 0, 0, 1, 0, 0, 1]\n    ];\n    let lightbulbsState = Array(7).fill(false);\n    for (let i = 0; i < buttons.length; ++i) {\n        if (buttons[i]) {\n            for (let j = 0; j < 7; ++j) {\n                lightbulbsState[j] ^= buttonMasks[i][j];\n            }\n        }\n    }\n    return lightbulbsState;\n  }\n\n  function isVictory(buttons) {\n    let lightbulbsState = getLightbulbsState(buttons);\n    let ans = true;\n    for (let i = 0; i < 7; ++i) {\n        ans = ans && lightbulbsState[i];\n    }\n    return ans;\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );"],"sourceRoot":""}